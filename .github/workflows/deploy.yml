name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Pull latest code
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: 6534
        timeout: 120s
        script: |
          cd /home/khalil/tunis-gp25
          git fetch origin
          git reset --hard origin/main
          echo "✅ Code pulled successfully"

    - name: Stop containers
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: 6534
        timeout: 60s
        script: |
          cd /home/khalil/tunis-gp25
          docker-compose down || true
          echo "✅ Containers stopped"

    - name: Create environment file
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: 6534
        timeout: 60s
        script: |
          cd /home/khalil/tunis-gp25
          cat > .env << EOF
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          DATABASE_PORT=${{ secrets.DATABASE_PORT }}
          FLASK_ENV=${{ secrets.FLASK_ENV }}
          FLASK_DEBUG=${{ secrets.FLASK_DEBUG }}
          ADMIN_USERNAME=${{ secrets.ADMIN_USERNAME }}
          ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}
          UPLOAD_FOLDER=${{ secrets.UPLOAD_FOLDER }}
          MAX_CONTENT_LENGTH=${{ secrets.MAX_CONTENT_LENGTH }}
          CLASSES=${{ secrets.CLASSES }}
          GENDERS=${{ secrets.GENDERS }}
          RECORD_TYPES=${{ secrets.RECORD_TYPES }}
          RESULT_SPECIAL_VALUES=${{ secrets.RESULT_SPECIAL_VALUES }}
          FIELD_EVENTS=${{ secrets.FIELD_EVENTS }}
          TRACK_EVENTS=${{ secrets.TRACK_EVENTS }}
          CURRENT_DAY=${{ secrets.CURRENT_DAY }}
          NPCS_COUNT=${{ secrets.NPCS_COUNT }}
          ATHLETES_COUNT=${{ secrets.ATHLETES_COUNT }}
          VOLUNTEERS_COUNT=${{ secrets.VOLUNTEERS_COUNT }}
          LOC_COUNT=${{ secrets.LOC_COUNT }}
          OFFICIALS_COUNT=${{ secrets.OFFICIALS_COUNT }}
          FLASK_SECRET_KEY=${{ secrets.SECRET_KEY }}
          EOF
          echo "✅ Environment file created"

    - name: Clean Docker resources
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: 6534
        timeout: 120s
        script: |
          cd /home/khalil/tunis-gp25
          docker system prune -f
          docker image prune -f
          echo "✅ Docker resources cleaned"

    - name: Build containers
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: 6534
        timeout: 300s
        script: |
          cd /home/khalil/tunis-gp25
          docker-compose build --no-cache
          echo "✅ Containers built successfully"

    - name: Start containers
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: 6534
        timeout: 120s
        script: |
          cd /home/khalil/tunis-gp25
          docker-compose up -d
          echo "✅ Containers started"

    - name: Wait for services
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: 6534
        timeout: 60s
        script: |
          echo "⏳ Waiting for services to initialize..."
          sleep 30
          echo "✅ Wait completed"

    - name: Check deployment status
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: 6534
        timeout: 60s
        script: |
          cd /home/khalil/tunis-gp25
          echo "📊 Container Status:"
          docker-compose ps
          echo ""
          echo "📊 Container Logs (last 10 lines):"
          docker-compose logs --tail=10 flask_app
          echo ""
          echo "🏥 Testing health endpoint..."
          sleep 5
          curl -f http://localhost:5000/health || echo "⚠️  Health check failed"
          echo ""
          echo "🎉 Deployment completed!"